% save_simulation_data.m
% Save all important variables generated by the main simulation to a MAT file
% Please make sure you have run main_simulation.m before running this script

function save_simulation_data(filename)
    % If no filename is provided, use the default name
    if nargin < 1
        current_time = datetime('now');
        filename = sprintf('simulation_data_%s.mat', char(current_time, 'yyyymmdd_HHMMSS'));
    end
    
    % Ensure the filename has a .mat extension
    if ~endsWith(filename, '.mat')
        filename = [filename, '.mat'];
    end
    
    fprintf('Saving simulation data to file: %s\n', filename);
    
    % Use evalin to save variables from the base workspace
    try
        % Method 1: Directly use evalin to execute the save command
        save_command = sprintf('save(''%s'', ''N_set'', ''Pt'', ''f'', ''c'', ''lambda'', ''eta_b'', ''eta_e'', ''sigmaR2'', ''sigmaE2'', ''mth'', ''Pth'', ''d_RU'', ''d_UE_set'', ''MC_runs'', ''SR_brute'', ''SR_cvx'', ''SR_pso'', ''Gamma0_brute'', ''Gamma1_brute'', ''Gamma0_cvx'', ''Gamma1_cvx'', ''RR_brute'', ''RR_cvx'', ''cvxSR_convergence'')', filename);
        evalin('base', save_command);
    catch ME
        fprintf('Method 1 failed, trying Method 2...\n');
        % Method 2: Check each variable exists, then save
        variables_to_save = {'N_set', 'Pt', 'f', 'c', 'lambda', 'eta_b', 'eta_e', ...
            'sigmaR2', 'sigmaE2', 'mth', 'Pth', 'd_RU', 'd_UE_set', 'MC_runs', ...
            'SR_brute', 'SR_cvx', 'SR_pso', ...
            'Gamma0_brute', 'Gamma1_brute', 'Gamma0_cvx', 'Gamma1_cvx', ...
            'RR_brute', 'RR_cvx', 'cvxSR_convergence'};
        
        existing_vars = {};
        for i = 1:length(variables_to_save)
            if evalin('base', sprintf('exist(''%s'', ''var'')', variables_to_save{i}))
                existing_vars{end+1} = variables_to_save{i};
            else
                fprintf('Warning: Variable %s does not exist in the workspace\n', variables_to_save{i});
            end
        end
        
        if ~isempty(existing_vars)
            var_string = strjoin(existing_vars, ''', ''');
            save_command = sprintf('save(''%s'', ''%s'')', filename, var_string);
            evalin('base', save_command);
            fprintf('Successfully saved %d variables\n', length(existing_vars));
        else
            error('No variables found to save!');
        end
    end
    
    fprintf('Simulation data has been successfully saved to: %s\n', filename);
    fprintf('The saved variables include:\n');
    fprintf('- System parameters: N_set, Pt, f, c, lambda, eta_b, eta_e, sigmaR2, sigmaE2, mth, Pth, d_RU, d_UE_set, MC_runs\n');
    fprintf('- Result data: SR_brute, SR_cvx, SR_pso\n');
    fprintf('- Reflection coefficients: Gamma0_brute, Gamma1_brute, Gamma0_cvx, Gamma1_cvx\n');
    fprintf('- Reader rates: RR_brute, RR_cvx\n');
    fprintf('- Convergence curve: cvxSR_convergence\n');
    
    % Display file size
    % fileInfo = dir(filename);
    % fprintf('File size: %.2f MB\n', fileInfo.bytes / 1024 / 1024);
end 